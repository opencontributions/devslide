<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="devslide.css" rel="stylesheet" />
    <style>
    body {
        max-width: 640px;
        margin: 0 auto;
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
        color: #555;
        background-color: #f5f5f5;
    }

    #track_select {
        margin: 20px;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        -webkit-user-select: none;
    }

    .track_inner_transition {
        transition: width .3s linear;
    }
    .track_transition {
        transition: left .3s linear;
    }

    .container_buttons {
        position: relative;
        margin: 20px;
    }
    .button_outer {
        float: left;
    }
    .button_inner {
        margin: 0 auto;
        width: 40px;
        height: 40px;
        background-color: #999;
        cursor: pointer;
        transition: background-color .2s linear;
    }
    .container_data {
        padding-top: 20px;
    }
    .button_active {
        background-color: #555;
    }

    .data_1{

    }
    .data_2{

    }
    </style>
</head>
<body>
    <div id="track_select">
        <h1>Drag and click slide selections</h1>
        <p>A draggable selection track in js. Should be supported by all modern browsers.
        Intended for use by people who don't mind reading through the source and tweaking where needed.</p>
        <p>View on <a href="https://github.com/opencontributions/devslide">Github</a> for more detail.</p>
        <div class="container_track"></div>

        <div class="container_buttons"></div>
        <div style="clear: both;"></div>
        <div class="container_data">
            <h1 class="data_0"></h1>
            <p class="data_1"></p>
            <p class="data_2"></p>
        </div>
    </div>
    <script src="//code.jquery.com/jquery-1.12.0.min.js"></script>
    <script src="third_party/jquery.mobile.custom.min.js"></script>
    <script src="devslide.js"></script>
    <script>
    'use strict';

    var json = [{
        "title": "Ducks",
        "intro": "Duck is the common name for a large number of species in the waterfowl family Anatidae, which also includes swans and geese.",
        "detail": "Ducks are sometimes confused with several types of unrelated water birds with similar forms, such as loons or divers, grebes, gallinules, and coots."
    }, {
        "title": "Owls",
        "intro": "Owls are birds from the order Strigiformes, which includes about 200 species of mostly solitary and nocturnal birds of prey.",
        "detail": "Owls are typified by an upright stance, a large, broad head, binocular vision, binaural hearing, sharp talons and feathers adapted for silent flight."
    }, {
        "title": "Beer",
        "intro": "Beer is the world's most widely consumed and likely the oldest alcoholic beverage; it is the third most popular drink overall, after water and tea.",
        "detail": "The production of beer is called brewing, which involves the fermentation of starches, mainly derived from cereal grains."
    }, {
        "title": "Salt",
        "intro": "Common salt is a mineral composed primarily of sodium chloride (NaCl), a chemical compound belonging to the larger class of salts",
        "detail": "Salt is present in vast quantities in seawater, where it is the main mineral constituent; the open ocean has about 35 grams (1.2 oz) of solids per litre, a salinity of 3.5%"
    }, {
        "title": "Neptune",
        "intro": "Neptune is the eighth and farthest known planet from the Sun in the Solar System. It is the fourth-largest planet by diameter and the third-largest by mass.",
        "detail": "Neptune is 17 times the mass of Earth and is slightly more massive than its near-twin Uranus, which is 15 times the mass of Earth and slightly larger than Neptune."
    }];

    //this is rough and ready
    function populateButtons(l, containerButtons) {
        var buttonOuter, buttonInner, percent;
        var trackWidth = $('.container_track').width();
        var width = (trackWidth / l) / trackWidth * 100;
        for (var i = 0; i < l; i++) {
            buttonOuter = document.createElement('div');
            buttonInner = document.createElement('div');
            buttonOuter.className = 'button_outer';
            buttonInner.className = 'button_inner';
            buttonOuter.style.width = width + '%';
            buttonOuter.appendChild(buttonInner);
            containerButtons.appendChild(buttonOuter);
        }
    }
    populateButtons(5, $('.container_buttons')[0]);


    //the important bit
    var track = new trackSelect;

    //couple of callbacks. first just for looks, second to set active
    track.init($('.container_track')[0], 5,
        function(active) {
            $('.button_active').removeClass('button_active');
            $('.button_inner').eq(active).addClass('button_active');
        },
        function(active) {
            $('.button_active').removeClass('button_active');
            $('.button_inner').eq(active).addClass('button_active');
            $('.data_0')[0].innerHTML = json[active].title;
            $('.data_1')[0].innerHTML = json[active].intro;
            $('.data_2')[0].innerHTML = json[active].detail;
        }
    );
    $(track.trackControl).on('vmousedown', function(e) {
        $(this).removeClass('track_transition');
        $(track.trackInner).removeClass('track_inner_transition');
        track.grab(e.pageX);
    });
    $('.container_track').on('click', function(e) {
        $(track.trackControl).addClass('track_transition');
        $(track.trackInner).addClass('track_inner_transition');
        track.click(e.pageX);
    });
    $(document).on('vmousemove', function(e) {
        track.dragTrack(e.pageX);
    });
    $(document).on('vmouseup', function(e) {
        track.up(e.pageX);
    });
    $('.container_buttons').on('click', '.button_inner', function(e) {
        $(track.trackControl).addClass('track_transition');
        $(track.trackInner).addClass('track_inner_transition');
        track.direct($(this).parent().index());
    });
    </script>
</body>
</html>